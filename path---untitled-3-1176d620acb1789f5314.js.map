{"version":3,"sources":["webpack:///path---untitled-3-1176d620acb1789f5314.js","webpack:///./.cache/json/untitled-3.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/untitled-3.json","module","exports","data","markdownRemark","html","frontmatter","date","path","tags","title","pathContext","prev","excerpt","id","timeToRead","next"],"mappings":"AAAAA,cAAc,KAERC,oEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,6SAAAC,aAA6UC,KAAA,mBAAAC,KAAA,cAAAC,KAAA,KAAAC,MAAA,oBAAsFC,aAAgBC,MAAQC,QAAA,2PAAAR,KAAA,23DAAAS,GAAA,2HAAAC,WAAA,EAAAT,aAAmzEC,KAAA,2BAAAC,KAAA,kBAAAC,KAAA,KAAAC,MAAA,mBAAiGM,MAASH,QAAA,2NAAAR,KAAA,0PAAAS,GAAA,uHAAAC,WAAA,EAAAT,aAAgoBC,KAAA,2BAAAC,KAAA,cAAAC,KAAA,KAAAC,MAAA","file":"path---untitled-3-1176d620acb1789f5314.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/untitled-3.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://arukas.io/en/\\\">https://arukas.io/en/</a>\\n<a href=\\\"https://zeit.co/now\\\">https://zeit.co/now</a>\\n<a href=\\\"http://www.evennode.com/\\\">http://www.evennode.com/</a>\\n<a href=\\\"http://surge.sh/\\\">http://surge.sh/</a>\\n<a href=\\\"https://www.nodechef.com\\\">https://www.nodechef.com</a></p>\",\"frontmatter\":{\"date\":\"January 01, 1970\",\"path\":\"/untitled-3\",\"tags\":null,\"title\":\"Nodejs hosting\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"With the rise of the upcoming  WebWorkers API  in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat? A WebWorker is a...\",\"html\":\"<p>With the rise of the upcoming <a href=\\\"http://www.w3.org/TR/workers/\\\">WebWorkers API</a> in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat?</p>\\n<p>A WebWorker is a separate thread that runs Javascript but has no access to the DOM or the <code>window</code> object. But it can do complex queries and loops, accessing core <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\\\">functions and APIs</a>, while you are letting the main thread, the UI thread, to handle the UI stuff only.</p>\\n<p>Rendering the DOM is so expensive, specially when it comes to complex interfaces we have nowadays. Not so long ago, the <a href=\\\"https://facebook.github.io/react/docs/reconciliation.html\\\">VirtualDOM</a> introduced which tried to speed up the rendering process by rendering only what actually changed, instead of re-rendering the whole page. But, that's not enough apparently, since even such few changes can't be handle well by low powered devices such as mobiles phones and watches.</p>\\n<p>In order to keep the 60fpm barrier, we are completely freeing the main thread to be able to handle the rendering only and we start WebWorkers to handle our business logic.</p>\\n<p>I found <a href=\\\"http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org\\\">two</a> <a href=\\\"https://medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882#.iv69h6ih2\\\">great</a> examples of this concept. Both, they are suggesting keeping the whole app outside the main thread and send there only the patch of the changed DOM to be rendered. The UI thread can then handle only rendering and complex fancy animations.</p>\\n<p>Oh, by the way, Nodejs fans, <a href=\\\"https://github.com/nodejs/node/pull/2133\\\">Workers are coming</a>.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/gatsby-blog-starter-kit/src/pages/ui-thread-free/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"1970-01-01T00:00:00.000Z\",\"path\":\"/ui-thread-free\",\"tags\":null,\"title\":\"UI thread free\"}},\"next\":{\"excerpt\":\"lets talk about over engineering trying to forecast the future e.g. We need an API to support our current 100 customers We need an API to support our current 100 customers plus another 100 that may come in the future\",\"html\":\"<p>lets talk about over engineering</p>\\n<p>trying to forecast the future</p>\\n<p>e.g. We need an API to support our current 100 customers</p>\\n<p>We need an API to support our current 100 customers plus another 100 that may come in the future</p>\",\"id\":\"/Users/Bariotis/Dev/develop/gatsby-blog-starter-kit/src/pages/untitled-4/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"1970-01-01T00:00:00.000Z\",\"path\":\"/untitled-4\",\"tags\":null,\"title\":\"(Untitled)\"}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---untitled-3-1176d620acb1789f5314.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://arukas.io/en/\\\">https://arukas.io/en/</a>\\n<a href=\\\"https://zeit.co/now\\\">https://zeit.co/now</a>\\n<a href=\\\"http://www.evennode.com/\\\">http://www.evennode.com/</a>\\n<a href=\\\"http://surge.sh/\\\">http://surge.sh/</a>\\n<a href=\\\"https://www.nodechef.com\\\">https://www.nodechef.com</a></p>\",\"frontmatter\":{\"date\":\"January 01, 1970\",\"path\":\"/untitled-3\",\"tags\":null,\"title\":\"Nodejs hosting\"}}},\"pathContext\":{\"prev\":{\"excerpt\":\"With the rise of the upcoming  WebWorkers API  in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat? A WebWorker is a...\",\"html\":\"<p>With the rise of the upcoming <a href=\\\"http://www.w3.org/TR/workers/\\\">WebWorkers API</a> in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat?</p>\\n<p>A WebWorker is a separate thread that runs Javascript but has no access to the DOM or the <code>window</code> object. But it can do complex queries and loops, accessing core <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\\\">functions and APIs</a>, while you are letting the main thread, the UI thread, to handle the UI stuff only.</p>\\n<p>Rendering the DOM is so expensive, specially when it comes to complex interfaces we have nowadays. Not so long ago, the <a href=\\\"https://facebook.github.io/react/docs/reconciliation.html\\\">VirtualDOM</a> introduced which tried to speed up the rendering process by rendering only what actually changed, instead of re-rendering the whole page. But, that's not enough apparently, since even such few changes can't be handle well by low powered devices such as mobiles phones and watches.</p>\\n<p>In order to keep the 60fpm barrier, we are completely freeing the main thread to be able to handle the rendering only and we start WebWorkers to handle our business logic.</p>\\n<p>I found <a href=\\\"http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org\\\">two</a> <a href=\\\"https://medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882#.iv69h6ih2\\\">great</a> examples of this concept. Both, they are suggesting keeping the whole app outside the main thread and send there only the patch of the changed DOM to be rendered. The UI thread can then handle only rendering and complex fancy animations.</p>\\n<p>Oh, by the way, Nodejs fans, <a href=\\\"https://github.com/nodejs/node/pull/2133\\\">Workers are coming</a>.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/gatsby-blog-starter-kit/src/pages/ui-thread-free/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"1970-01-01T00:00:00.000Z\",\"path\":\"/ui-thread-free\",\"tags\":null,\"title\":\"UI thread free\"}},\"next\":{\"excerpt\":\"lets talk about over engineering trying to forecast the future e.g. We need an API to support our current 100 customers We need an API to support our current 100 customers plus another 100 that may come in the future\",\"html\":\"<p>lets talk about over engineering</p>\\n<p>trying to forecast the future</p>\\n<p>e.g. We need an API to support our current 100 customers</p>\\n<p>We need an API to support our current 100 customers plus another 100 that may come in the future</p>\",\"id\":\"/Users/Bariotis/Dev/develop/gatsby-blog-starter-kit/src/pages/untitled-4/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"1970-01-01T00:00:00.000Z\",\"path\":\"/untitled-4\",\"tags\":null,\"title\":\"(Untitled)\"}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/untitled-3.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/untitled-3.json\n// module chunks = 16"],"sourceRoot":""}